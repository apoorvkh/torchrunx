name: Run checks on push or PR to main

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main

jobs:

  setup-dev-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          environment: dev

  check:
    runs-on: ubuntu-latest
    needs: setup-dev-env
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          environment: dev
      - run: ruff check
        if: success() || failure()
      - run: ruff format --check
        if: success() || failure()

  ##

  setup-default-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          environment: default

  typecheck:
    runs-on: ubuntu-latest
    needs: setup-default-env
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          environment: default
      - run: pyright
        if: success() || failure()

  ##

  test:
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        python: [py38, py39, py310, py311] 
        pytorch: [torch20, torch21, torch22, torch23, torch24]

    steps:
      - uses: actions/checkout@v4

      - name: Inject dependencies into pixi.toml
        run: |
          sed -i '/\[feature.dev.pypi-dependencies\]/i \
          [feature.test.dependencies]\
          python = "3.8"\
          [feature.test.pypi-dependencies]\
          torch = "2.3"\n' pixi.toml

          sed -i '/\[environments\]/a test = { features = ["package", "dev", "test"], solve-group = "default" }' pixi.toml

      - uses: ./.github/actions/setup-env
        with:
          cache: false
          environment: test

      - run: pytest tests
