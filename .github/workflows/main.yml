name: Run checks on push or PR to main

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main

jobs:

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.27.1
          frozen: true
          cache: true
          environments: dev
          activate-environment: dev
      - run: ruff check
        if: success() || failure()
      - run: ruff format --check
        if: success() || failure()

  ##

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.27.1
          frozen: true
          cache: true
          environments: default
          activate-environment: default
      - run: pyright
        if: success() || failure()

  ##

  test:
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"] 
        pytorch: ["2.0", "2.1", "2.2", "2.3", "2.4"]

    steps:
      - uses: actions/checkout@v4

      - name: Inject (python, pytorch) test dependencies into pixi.toml
        run: |
          sed -i 's/python = "3.8.1"/python = "${{ matrix.python }}.*"/' pixi.toml
          sed -i '/\[feature\.package\]/i [feature.test.pypi-dependencies]\ntorch = "~=${{ matrix.pytorch }}"\n' pixi.toml
          sed -i '/\[environments\]/a test = { features = ["package", "dev", "test"], solve-group = "default" }' pixi.toml

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.27.1
          locked: false
          frozen: false
          cache: false
          environments: test
          activate-environment: test

      - run: pytest tests
